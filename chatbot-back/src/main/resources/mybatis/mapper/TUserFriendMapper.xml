<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chao.chatbot.back.mapper.TUserFriendMapper" >
  <resultMap id="BaseResultMap" type="com.chao.chatbot.back.model.TUserFriend" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="user_id" property="userId" jdbcType="CHAR" />
    <result column="friend_id" property="friendId" jdbcType="CHAR" />
    <result column="del_flag" property="delFlag" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, friend_id, del_flag, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_user_friend
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_user_friend
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.chao.chatbot.back.model.TUserFriend" >
    insert into t_user_friend (id, user_id, friend_id, 
      del_flag, create_date, update_date
      )
    values (#{id,jdbcType=CHAR}, #{userId,jdbcType=CHAR}, #{friendId,jdbcType=CHAR}, 
      #{delFlag,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chao.chatbot.back.model.TUserFriend" >
    insert into t_user_friend
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="friendId != null" >
        friend_id,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=CHAR},
      </if>
      <if test="friendId != null" >
        #{friendId,jdbcType=CHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chao.chatbot.back.model.TUserFriend" >
    update t_user_friend
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=CHAR},
      </if>
      <if test="friendId != null" >
        friend_id = #{friendId,jdbcType=CHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chao.chatbot.back.model.TUserFriend" >
    update t_user_friend
    set user_id = #{userId,jdbcType=CHAR},
      friend_id = #{friendId,jdbcType=CHAR},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>