<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chao.chatbot.back.mapper.TUserMapper">
    <resultMap id="BaseResultMap" type="com.chao.chatbot.back.model.TUser">
        <id column="id" jdbcType="CHAR" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="is_active" jdbcType="VARCHAR" property="isActive"/>
        <result column="login_address" jdbcType="VARCHAR" property="loginAddress"/>
        <result column="created" jdbcType="TIMESTAMP" property="created"/>
        <result column="updated" jdbcType="TIMESTAMP" property="updated"/>
        <result column="online" jdbcType="VARCHAR" property="online"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, username, password, email, code, is_active, login_address, created, updated, 
    online
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        where id = #{id,jdbcType=CHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_user
    where id = #{id,jdbcType=CHAR}
  </delete>
    <insert id="insert" parameterType="com.chao.chatbot.back.model.TUser">
    insert into t_user (id, username, password, 
      email, code, is_active, 
      login_address, created, updated, 
      online)
    values (#{id,jdbcType=CHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{isActive,jdbcType=VARCHAR}, 
      #{loginAddress,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{online,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.chao.chatbot.back.model.TUser">
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="isActive != null">
                is_active,
            </if>
            <if test="loginAddress != null">
                login_address,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="updated != null">
                updated,
            </if>
            <if test="online != null">
                online,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=CHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null">
                #{isActive,jdbcType=VARCHAR},
            </if>
            <if test="loginAddress != null">
                #{loginAddress,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated != null">
                #{updated,jdbcType=TIMESTAMP},
            </if>
            <if test="online != null">
                #{online,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.chao.chatbot.back.model.TUser">
        update t_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null">
                is_active = #{isActive,jdbcType=VARCHAR},
            </if>
            <if test="loginAddress != null">
                login_address = #{loginAddress,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="updated != null">
                updated = #{updated,jdbcType=TIMESTAMP},
            </if>
            <if test="online != null">
                online = #{online,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=CHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chao.chatbot.back.model.TUser">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      is_active = #{isActive,jdbcType=VARCHAR},
      login_address = #{loginAddress,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      online = #{online,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

    <select id="getUserByParam" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_user
        <where>
            <if test="username != null and username != ''">
                username like "%${username}%"
            </if>
            <if test="email != null and email != ''">
                and email like "%${email}%"
            </if>
        </where>
    </select>
</mapper>